version: '3'

services:
  ai-project-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:8080"
    environment:
      NODE_ENV: development
      SERVICE: core-service
      PORT: 8080

  # AWS substitute services
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=ebdb
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./.local/db-init:/docker-entrypoint-initdb.d
  cache:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - cache-data:/data
  nginx:
    image: nginx:1.21
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.local/logs:/etc/nginx/logs
    ports:
      - "80:80"
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: AKIALOCALACCESSKEY
      MINIO_SECRET_KEY: 9T4LAQ+1/LOCALSECRETKEY
    volumes:
      - ./.local/data-s3:/data
      - ./.local/config-s3:/.minio
    command: server /data

# NOTICE - these containers are disabled until post-MVP development and inclusion of EMR training
# spark-master:
#   image: bitnami/spark:latest
#   environment:
#     - SPARK_MODE=master
#     - SPARK_RPC_AUTHENTICATION_ENABLED=no
#     - SPARK_RPC_ENCRYPTION_ENABLED=no
#     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#     - SPARK_SSL_ENABLED=no
#   ports:
#     - "7077:7077"
#     - "6060:6060"
# spark-worker:
#     image: bitnami/spark:latest
#     environment:
#       - SPARK_MODE=worker
#       - SPARK_MASTER_URL=spark://spark-master:7077
#       - SPARK_WORKER_MEMORY=1G
#       - SPARK_WORKER_CORES=1
#       - SPARK_RPC_AUTHENTICATION_ENABLED=no
#       - SPARK_RPC_ENCRYPTION_ENABLED=no
#       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#       - SPARK_SSL_ENABLED=no
#     depends_on:
#       - spark-master

volumes:
  db-data:
  cache-data:
